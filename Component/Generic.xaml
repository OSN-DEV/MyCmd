<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    >

    <!--Declaration-->
    <FontFamily x:Key="DefaultFontFamily" >Meiryo UI</FontFamily>
    <system:Double x:Key="DefaultFonSize">14.0</system:Double>
    <SolidColorBrush x:Key="DefaultTextForeground" Color="#333333"/>
    <SolidColorBrush x:Key="GuideTextLabel" Color="#B1B8CC"/>


    <!--Common Style-->
    <Style TargetType="TextBlock" x:Key="BaseTextBlockStyle" >
        <Setter Property="FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource DefaultFonSize}" />
        <Setter Property="Foreground" Value="{StaticResource DefaultTextForeground}" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    <Style TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlockStyle}" />
    
    <Style TargetType="CheckBox" >
        <Setter Property="FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource DefaultFonSize}" />
        <Setter Property="Foreground" Value="{StaticResource DefaultTextForeground}" />
    </Style>

    <Style TargetType="TabControl">
        <Setter Property="FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="FontSize" Value="12.0" />
        <Setter Property="Foreground" Value="{StaticResource DefaultTextForeground}" />
    </Style>

    <Style TargetType="TextBox" x:Key="BaseTextBoxStyle">
        <Setter Property="FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource DefaultFonSize}" />
        <Setter Property="Foreground" Value="{StaticResource DefaultTextForeground}" />
        <Setter Property="BorderThickness" Value="0,0,0,1" />
        <Setter Property="BorderBrush" Value="#EEEEEE" />
        <Setter Property="MaxLength" Value="15" />
        <Setter Property="Margin" Value="3,4" />
        <Setter Property="HorizontalAlignment" Value="Left" />
    </Style>

    <Style TargetType="TextBox" BasedOn="{StaticResource BaseTextBoxStyle}" />
    
    <Style TargetType="ListViewItem">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource DefaultFonSize}" />
        <Setter Property="Foreground" Value="{StaticResource DefaultTextForeground}" />
        <Setter Property="Margin" Value="5,0" />
    </Style>

    <Style TargetType="ListBox">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource DefaultFonSize}" />
        <Setter Property="Foreground" Value="{StaticResource DefaultTextForeground}" />
        <Setter Property="Margin" Value="5,0" />
    </Style>

    <!--Indivisual Style-->
    <Style TargetType="RadioButton" x:Key="TabButton" BasedOn="{StaticResource {x:Static ToolBar.RadioButtonStyleKey}}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Height" Value="25" />
        <Setter Property="Width" Value="50" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter 
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="#BBBBBB" />
                            <Setter Property="Background" Value="#EBEEF5" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="#FFFFFF" />
                            <Setter Property="Background" Value="#FF8945" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="false" />
                                <Condition Property="IsEnabled" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="#333333" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="false" />
                                <Condition Property="IsEnabled" Value="true" />
                                <Condition Property="IsMouseOver" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Cursor" Value="Hand" />
                            <Setter Property="Foreground" Value="#515151" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="false" />
                                <Condition Property="IsEnabled" Value="true" />
                                <Condition Property="IsPressed" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Cursor" Value="Hand" />
                            <Setter Property="Foreground" Value="#515151" />
                            <Setter Property="Background" Value="#D3D3C8" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    
    <!--<Style TargetType="Button" x:Key="TabButton" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Height" Value="25" />
        <Setter Property="Width" Value="50" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter 
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Cursor" Value="Hand" />
                            <Setter Property="Foreground" Value="#BBBBBB" />
                            <Setter Property="Background" Value="#F1F1E6" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand" />
                            <Setter Property="Background" Value="#FF0000" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <Style x:Key="LabelButton" TargetType="Button">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource DefaultFonSize}" />
        <Setter Property="Foreground" Value="#495780" />
        <Setter Property="Margin" Value="10,5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <TextBlock Text="{TemplateBinding Content}"
                               Foreground="{TemplateBinding Foreground}"
                               TextWrapping="Wrap" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Foreground" Value="#67759E" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True" >
                <Setter Property="Foreground" Value="#2B3962" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False" >
                <Setter Property="Foreground" Value="Gainsboro" />
            </Trigger>
        </Style.Triggers>
    </Style>



</ResourceDictionary>
